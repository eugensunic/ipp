
  TODO
  ----
  1. http get with params and introduce params on backend php
  2. research just put params for the time being
  3. create quick database for upcoming data, abandon big database
  4. introduce change background localStorage, introduce themes make them on index.html so they are global
  5. include fonts, include this int theme only, don't default it
  6. include blog tag in header row (ma internal page for posts writing)
  7. Make relative links once in production
  8. Reactive select on input-page does not go away when clicking outside the dropdown,
  9. Fix inputs, allow no char other than numbers
  10. Try to route numbers when click on a number so that back button works
  11. Add percentage sign to stats next to percentage
  12. Remove acid reflux just keep GERD


  REFACTORING
  -----------
  - remove inline styles make similar to CS-Manfred classes
  - add css to one file only
  - '' instead of ""
  - ES6 everything what you can, functions, this's, use lexical scope, get rid of returns, spaces between curly brackets, spaces, don't use
  beautify from abramov and fiddle js react...,
  - something else instead of axios
  - beautify css files
  - add new version in package json: react, react redux, babel...
  - binding up not in middle of code
  - fix the algorithm for fetching database data, it's to fragile now
  - replace axios with something new
  - var===false to !var, var==true to var



  ADDITIONAL LINKS
  ----------------
  COLORS: https://uigradients.com/#Clouds


  DATABASE
  --------

  - last data is 1207 in post id, data id, everything below that is fixed as from 31.12.2017.


  DONE
  ----
   - maybe adjust css to be nicer for post-div
   - integrate html page to app
   - put images which are not there now
   - css again the post doctor and pharmacy text
   - Add routing

  NOTES
  -----
   - write params for testing in this way: url?param_0=0&param_1=20
   - always delete branch when you finished with it (when merged to master)
   - in post php data (not the main one, all the other ones) put order by asc and put distinct id, because sometimes you get doubles and
   things get messed up when associating on frontend.

  brand-nexium data, post, rest all id's match perfectly
